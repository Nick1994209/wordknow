worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    default_type application/octet-stream;
    include       /etc/nginx/mime.types;

    access_log /var/log/nginx/access.log combined;
    sendfile on;

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response
        server unix:/code/wordknow/application/app.sock fail_timeout=0;
    }

    server {
	# https://bjornjohansen.no/redirect-to-https-with-nginx
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        #listen 80;
	# listen 80 default_server;
	listen 443 ssl default_server;
	server_name wordknow.ml www.wordknow.ml;

	# https://www.nginx.com/blog/free-certificates-lets-encrypt-and-nginx/
	ssl_certificate /etc/letsencrypt/live/wordknow.ml/fullchain.pem; #/etc/letsencrypt/live/my-domain/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/wordknow.ml/privkey.pem;

        keepalive_timeout 20;
        access_log  /var/log/nginx/project.access.log;
        error_log  /var/log/nginx/project.error.log;

	location /.well-known/acme-challenge {
	    root /var/www/letsencrypt;
	}

        location /static/ {
            root /app_static_files;
        }

        location / {
            include proxy_params;
            proxy_pass http://app_server;
        }
    }
}